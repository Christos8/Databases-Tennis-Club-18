CREATE_USER_AUTH_TABLE = """
CREATE TABLE IF NOT EXISTS USER_AUTH (
    username TEXT NOT NULL PRIMARY KEY,
    password TEXT NOT NULL,
    FOREIGN KEY (username) REFERENCES MEMBER(username)
);
"""

CREATE_MEMBER_TABLE = """
CREATE TABLE IF NOT EXISTS MEMBER (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    surname TEXT,
    birthdate DATE,
    phone TEXT,
    address TEXT,
    email TEXT,
    category TEXT,
    username TEXT NOT NULL UNIQUE
);
"""

CREATE_PLAYER_TABLE = """
CREATE TABLE IF NOT EXISTS PLAYER (
    memberid INTEGER NOT NULL,
    FOREIGN KEY (memberid) REFERENCES MEMBER(id)
);
"""

CREATE_COACH_TABLE = """
CREATE TABLE IF NOT EXISTS COACH (
    memberid INTEGER NOT NULL PRIMARY KEY,
    FOREIGN KEY (memberid) REFERENCES MEMBER(id)
);
"""

CREATE_TOURNAMENT_TABLE = """
CREATE TABLE IF NOT EXISTS TOURNAMENT (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    deadline DATE,
    fee REAL,
    prize REAL,
    date DATE,
    sTime TIME
);
"""

CREATE_TOURNAMENT_PARTICIPATION_TABLE = """
CREATE TABLE IF NOT EXISTS TOURNAMENT_PARTICIPATION (
    playerid INTEGER NOT NULL,
    tournamentid INTEGER NOT NULL,
    PRIMARY KEY (playerid, tournamentid),
    FOREIGN KEY (playerid) REFERENCES PLAYER(memberid),
    FOREIGN KEY (tournamentid) REFERENCES TOURNAMENT(id)
);
"""

CREATE_SUBSCRIPTION_TABLE = """
CREATE TABLE IF NOT EXISTS SUBSCRIPTION (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    startdate DATE,
    enddate DATE,
    type TEXT,
    category TEXT,
    status BOOLEAN
);
"""

CREATE_PLAYER_SUBSCRIPTION_TABLE = """
CREATE TABLE IF NOT EXISTS PLAYER_SUBSCRIPTION (
    playerid INTEGER NOT NULL,
    subscriptionid INTEGER NOT NULL,
    PRIMARY KEY (playerid, subscriptionid),
    FOREIGN KEY (playerid) REFERENCES PLAYER(memberid),
    FOREIGN KEY (subscriptionid) REFERENCES SUBSCRIPTION(id)
);
"""

CREATE_EQUIPMENT_TABLE = """
CREATE TABLE IF NOT EXISTS EQUIPMENT (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    description TEXT,
    characteristiccode TEXT,
    availability BOOLEAN
);
"""

CREATE_EQUIPMENT_RENTAL_TABLE = """
CREATE TABLE IF NOT EXISTS EQUIPMENT_RENTAL (
    playerid INTEGER NOT NULL,
    equipmentid INTEGER NOT NULL,
    rentdate DATE,
    PRIMARY KEY (playerid, equipmentid),
    FOREIGN KEY (playerid) REFERENCES PLAYER(memberid),
    FOREIGN KEY (equipmentid) REFERENCES EQUIPMENT(id)
);
"""

CREATE_LESSON_TABLE = """
CREATE TABLE IF NOT EXISTS LESSON (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    date DATE,
    starttime TIME,
    endtime TIME,
    difficulty TEXT,
    coachid INTEGER,
    FOREIGN KEY (coachid) REFERENCES COACH(memberid)
);
"""

CREATE_LESSON_PARTICIPATION_TABLE = """
CREATE TABLE IF NOT EXISTS LESSON_PARTICIPATION (
    playerid INTEGER NOT NULL,
    lessonid INTEGER NOT NULL,
    PRIMARY KEY (playerid, lessonid),
    FOREIGN KEY (playerid) REFERENCES PLAYER(memberid),
    FOREIGN KEY (lessonid) REFERENCES LESSON(id)
);
"""

CREATE_RESERVATION_TABLE = """
CREATE TABLE IF NOT EXISTS RESERVATION (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    fieldid INTEGER,
    starttime TIME,
    endtime TIME,
    lessonid INTEGER,
    coachid INTEGER,
    FOREIGN KEY (fieldid) REFERENCES FIELD(id),
    FOREIGN KEY (lessonid) REFERENCES LESSON(id),
    FOREIGN KEY (coachid) REFERENCES COACH(memberid)
);
"""

CREATE_PLAYER_RESERVATION_TABLE = """
CREATE TABLE IF NOT EXISTS PLAYER_RESERVATION (
    playerid INTEGER NOT NULL,
    reservationid INTEGER NOT NULL,
    PRIMARY KEY (playerid, reservationid),
    FOREIGN KEY (playerid) REFERENCES PLAYER(memberid),
    FOREIGN KEY (reservationid) REFERENCES RESERVATION(id)
);
"""

CREATE_FIELD_TABLE = """
CREATE TABLE IF NOT EXISTS FIELD (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    type TEXT,
    status TEXT
);
"""

CREATE_FIELD_RESERVATION_TABLE = """
CREATE TABLE IF NOT EXISTS FIELD_RESERVATION (
    reservationid INTEGER NOT NULL,
    fieldid INTEGER NOT NULL,
    PRIMARY KEY (reservationid, fieldid),
    FOREIGN KEY (reservationid) REFERENCES RESERVATION(id),
    FOREIGN KEY (fieldid) REFERENCES FIELD(id)
);
"""
